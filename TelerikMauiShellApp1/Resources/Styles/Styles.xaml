<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml">

    <Style TargetType="ActivityIndicator">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource BrandColor}, Dark=White}" />
    </Style>

    <Style TargetType="IndicatorView">
        <Setter Property="IndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}"/>
        <Setter Property="SelectedIndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray100}}"/>
    </Style>

    <Style x:Key="AppointmentViewBorder" TargetType="Border">
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource CommonButtonBorderColor}, Dark=White}" />
        <Setter Property="StrokeShape" Value="RoundRectangle 10,10,10,10"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource AppointmentTextBackground}, Dark={StaticResource Black}}" />
    </Style>
    <Style x:Key="StatCodeColBorder" TargetType="Border" BasedOn="{StaticResource AppointmentViewBorder}">
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource BrandColor}, Dark=White}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light= White, Dark=Black}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="StrokeThickness" Value="2"/>
    </Style>

    <Style TargetType="BoxView">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource AppointmentTextBackground}, Dark=White}" />
    </Style>

    <Style TargetType="Button">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource PrimaryDarkText}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="PointerOver" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="PopUpButton">
        <Setter Property="TextColor" Value="White" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BrandColor}, Dark={StaticResource BrandColorDark}}" />
        <Setter Property="FontFamily" Value="HelveticaRegular"/>
        <Setter Property="FontSize" Value="{OnPlatform iOS=18,Android=17}"/>
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
    </Style>
    <Style TargetType="Button" x:Key="ClearButton">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
        <Setter Property="FontFamily" Value="HelveticaRegular"/>
        <Setter Property="FontSize" Value="Small"/>
        <Setter Property="BorderWidth" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="BorderColor" Value="{StaticResource CommonButtonBorderColor}"/>
    </Style>
    <Style TargetType="Button" x:Key="SubmitButton">
        <Setter Property="TextColor" Value="{AppThemeBinding Light=White,Dark={StaticResource BrandColorLighter}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BrandColorDarker}, Dark={StaticResource Black}}" />
        <Setter Property="FontFamily" Value="HelveticaRegular"/>
        <Setter Property="FontSize" Value="Medium"/>
        <Setter Property="BorderWidth" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="BorderColor" Value="{StaticResource CommonButtonBorderColor}"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="PointerOver" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="CheckBox">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="BasicDatePicker" TargetType="DatePicker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource BaseTextColor}, Dark= White}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="HelveticaRegular"/>
        <Setter Property="FontSize" Value="Small"/>
        <Setter Property="MinimumHeightRequest" Value="24"/>
        <Setter Property="MinimumWidthRequest" Value="24"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Editor" x:Key="BasicEditor">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource BaseTextColor}, Dark=White}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="HelveticaRegular"/>
        <Setter Property="FontSize" Value="Medium" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray100}}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="Editor" x:Key="CommonTxtColorEditor" BasedOn="{StaticResource BasicEditor}">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource CommonTextColor}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="HelveticaRegular"/>
        <Setter Property="FontSize" Value="Medium" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="AutoSize" Value="TextChanges"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="Editor" x:Key="AppointmentViewEditorStyle" BasedOn="{StaticResource BasicEditor}">
        <Setter Property="FontSize" Value="Small" />
    </Style>
    <!--<Style TargetType="Entry">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>-->
    <Style TargetType="Entry" x:Key="BasicEntry">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource BaseTextColor}, Dark=White}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="HelveticaRegular"/>
        <!--<Setter Property="FontSize" Value="14" />-->
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray100}}" />
        <!--<Setter Property="MinimumHeightRequest" Value="44"/>
     <Setter Property="MinimumWidthRequest" Value="44"/>-->
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="Entry" x:Key="AppointmentViewSubjectStyle" BasedOn="{StaticResource BasicEntry}">
        <Setter Property="FontSize" Value="Medium" />
    </Style>
    <Style TargetType="Entry" x:Key="AppointmentViewEntryStyle" BasedOn="{StaticResource BasicEntry}">
        <Setter Property="FontSize" Value="Small" />
    </Style>
    <Style TargetType="Frame">
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource BrandColor}, Dark={StaticResource BrandColor}}" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="BackgroundColor" Value="White" />
    </Style>

    <Style TargetType="ImageButton">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="BorderColor" Value="Transparent"/>
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.5" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="PointerOver" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!--<Style TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>-->
    <Style TargetType="Label" x:Key="PopUpHeader">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource BrandColor}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="HelveticaBold" />
        <Setter Property="FontSize" Value="{OnPlatform iOS=18,Android=17}" />
    </Style>
    <Style TargetType="Label" x:Key="PopUpMessage">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource BrandColor}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="HelveticaRegular" />
        <Setter Property="FontSize" Value="{OnPlatform iOS=17,Android=16}" />
    </Style>
    <Style TargetType="Label" x:Key="BasicLabel">
        <Setter Property="TextColor" Value="{AppThemeBinding Light=Black, Dark=White}" />
        <Setter Property="FontFamily" Value="HelveticaRegular" />
        <Setter Property="VerticalOptions" Value="Center"/>
        <Setter Property="VerticalTextAlignment" Value="Center"/>
        <Setter Property="LineBreakMode" Value="TailTruncation"/>
    </Style>
    <Style TargetType="Label" x:Key="CommonTextColorLable" BasedOn="{StaticResource BasicLabel}">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource CommonTextColor},Dark=White}"/>
    </Style>
    <Style TargetType="Label" x:Key="CommonTextColorMediumLable" BasedOn="{StaticResource BasicLabel}">
        <Setter Property="FontSize" Value="Medium"/>
    </Style>
    <Style TargetType="Label" x:Key="CommonTextColorSmallLable" BasedOn="{StaticResource BasicLabel}">
        <Setter Property="FontSize" Value="Small"/>
    </Style>
    <Style TargetType="Label" x:Key="MediumWhiteLable" BasedOn="{StaticResource BasicLabel}">
        <Setter Property="TextColor" Value="White"/>
        <Setter Property="FontSize" Value="Medium"/>
    </Style>
    <Style TargetType="Label" x:Key="MediumBaseTextColorLable" BasedOn="{StaticResource BasicLabel}">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource BaseTextColor},Dark=White}"/>
        <Setter Property="FontSize" Value="Medium"/>
    </Style>
    <Style TargetType="Label" x:Key="SmallBaseTextColorLable" BasedOn="{StaticResource BasicLabel}">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource BaseTextColor},Dark=White}"/>
        <Setter Property="FontSize" Value="Small"/>
    </Style>
    <Style TargetType="Label" x:Key="SmallBaseTextColorBoldLable" BasedOn="{StaticResource SmallBaseTextColorLable}">
        <Setter Property="FontFamily" Value="HelveticaBold" />
    </Style>
    <Style TargetType="Label" x:Key="CmnTxtColrSmallLabel" BasedOn="{StaticResource BasicLabel}">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource CommonTextColor},Dark=White}" />
        <Setter Property="FontSize" Value="Small"/>
    </Style>
    <Style TargetType="Label" x:Key="SmalWhiteTextColorLable" BasedOn="{StaticResource BasicLabel}">
        <Setter Property="TextColor" Value="White"/>
        <Setter Property="FontSize" Value="Small"/>
    </Style>
    <Style TargetType="Label" x:Key="BasicBoldLabel">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource CommonTextColor},Dark=White}" />
        <Setter Property="FontFamily" Value="HelveticaBold" />
        <Setter Property="VerticalOptions" Value="Center"/>
        <Setter Property="VerticalTextAlignment" Value="Center"/>
        <Setter Property="LineBreakMode" Value="TailTruncation"/>
    </Style>
    <Style TargetType="Label" x:Key="BasicMicroLabel">
        <Setter Property="TextColor" Value="{AppThemeBinding Light=Black, Dark=White}" />
        <Setter Property="FontFamily" Value="HelveticaRegular"/>
        <Setter Property="FontSize" Value="Micro"/>
        <Setter Property="VerticalOptions" Value="Center"/>
        <Setter Property="VerticalTextAlignment" Value="Center"/>
        <Setter Property="LineBreakMode" Value="TailTruncation"/>
    </Style>
    <Style TargetType="Label" x:Key="WhiteTextMicroLabel" BasedOn="{StaticResource BasicMicroLabel}">
        <Setter Property="TextColor" Value="White" />
    </Style>
    <Style TargetType="Label" x:Key="CmnTxtColrMicroLabel" BasedOn="{StaticResource BasicMicroLabel}">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource CommonTextColor},Dark=White}" />
    </Style>
    <Style TargetType="Label" x:Key="NetworkDropLabel" >
        <Setter Property="TextColor" Value="White" />
        <Setter Property="FontFamily" Value="HelveticaBold" />
        <Setter Property="BackgroundColor" Value="Red"/>
        <Setter Property="HorizontalTextAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="Small"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
    </Style>
    <Style TargetType="StackLayout" x:Key="FilterViewStackLayout">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light=White,Dark=Black}" />
        <Setter Property="Padding" Value="25,10,5,10" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Grid.ColumnSpan" Value="3"/>
    </Style>
    <Style TargetType="Span">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
    </Style>
    <Style TargetType="Label" x:Key="PageTitle" BasedOn="{StaticResource BasicBoldLabel}">
        <Setter Property="TextColor" Value="White"/>
        <Setter Property="FontSize" Value="Medium" />
    </Style>
    <Style TargetType="Label" x:Key="Headline" BasedOn="{StaticResource BasicBoldLabel}">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource BrandColor},Dark=White}" />
        <Setter Property="FontSize" Value="26" />
        <Setter Property="LineBreakMode" Value="WordWrap"/>
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontAttributes" Value="Bold" />
    </Style>

    <Style TargetType="Label" x:Key="SubHeadline">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource MidnightBlue}, Dark={StaticResource White}}" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
    </Style>
    <Style TargetType="Label" x:Key="AppointmentViewHeaderLabelStyle" BasedOn="{StaticResource BasicBoldLabel}">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource AppointmentHeaderLabelTextColor},Dark=White}" />
        <Setter Property="FontSize" Value="Medium" />
        <Setter Property="LineBreakMode" Value="WordWrap"/>
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontAttributes" Value="Bold" />
    </Style>
    <Style TargetType="Label" x:Key="AppointmentViewLabelStyle" BasedOn="{StaticResource BasicLabel}">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource AppointmentLabelTextColor},Dark=White}" />
        <Setter Property="FontSize" Value="Small" />
        <Setter Property="LineBreakMode" Value="WordWrap"/>
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontAttributes" Value="Bold" />
    </Style>
    <Style x:Key="AppointmentViewDeleteIconStyle" TargetType="Image">
        <Setter Property="Source" Value="ic_close_circle.png"/>
        <Setter Property="WidthRequest" Value="16"/>
        <Setter Property="HeightRequest" Value="16"/>
        <Setter Property="VerticalOptions" Value="Center"/>
        <Setter Property="HorizontalOptions" Value="End"/>
    </Style>
    <Style x:Key="AppointmentViewAddResourceIconStyle" TargetType="Image">
        <Setter Property="Source" Value="ic_plus_circle_green.png"/>
        <Setter Property="WidthRequest" Value="16"/>
        <Setter Property="HeightRequest" Value="16"/>
        <Setter Property="VerticalOptions" Value="Center"/>
    </Style>
    <Style TargetType="ListView">
        <Setter Property="SeparatorColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="RefreshControlColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
    </Style>

    <Style TargetType="Picker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource BaseTextColor}, Dark={StaticResource White}}" />
        <Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource BaseTextColor}, Dark={StaticResource Gray200}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="HelveticaRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="ProgressColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="ProgressColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="RefreshView">
        <Setter Property="RefreshColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
    </Style>

    <Style TargetType="SearchBar">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="PlaceholderColor" Value="{StaticResource Gray500}" />
        <Setter Property="CancelButtonColor" Value="{StaticResource Gray500}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="SearchHandler">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="PlaceholderColor" Value="{StaticResource Gray500}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Shadow">
        <Setter Property="Radius" Value="15" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Brush" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
        <Setter Property="Offset" Value="10,10" />
    </Style>

    <Style TargetType="Slider">
        <Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
        <Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
        <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
                            <Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="SwipeItem">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
    </Style>

    <Style TargetType="Switch">
        <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
        <Setter Property="ThumbColor" Value="{StaticResource White}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="On">
                        <VisualState.Setters>
                            <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource BrandColorLight}, Dark={StaticResource Gray200}}" />
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource BrandColorDark}, Dark={StaticResource White}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Off">
                        <VisualState.Setters>
                            <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource BrandColorLight}, Dark={StaticResource Gray200}}" />
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="BasicTimePicker" TargetType="TimePicker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource BaseTextColor}, Dark= White}" />
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <Setter Property="FontFamily" Value="HelveticaRegular"/>
        <Setter Property="FontSize" Value="Small"/>
        <Setter Property="MinimumHeightRequest" Value="24"/>
        <Setter Property="MinimumWidthRequest" Value="24"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Page" ApplyToDerivedTypes="True">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource OffBlack}}" />
    </Style>

    <Style TargetType="Shell" ApplyToDerivedTypes="True">
        <Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Light={StaticResource BrandColor}, Dark={StaticResource BrandColor}}" />
        <Setter Property="Shell.ForegroundColor" Value="{StaticResource White}" />
        <Setter Property="Shell.TitleColor" Value="{AppThemeBinding Light={StaticResource BrandColor}, Dark={StaticResource BrandColor}}" />
        <Setter Property="Shell.DisabledColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}" />
        <Setter Property="Shell.UnselectedColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray200}}" />
        <Setter Property="Shell.NavBarHasShadow" Value="False" />
        <Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource BrandColor}, Dark={StaticResource BrandColor}}" />
        <Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
        <Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
        <Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource BaseTextColor}, Dark={StaticResource BaseTextColor}}" />
    </Style>

    <Style TargetType="NavigationPage">
        <Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource BrandColor}, Dark={StaticResource BrandColor}}" />
        <Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
        <Setter Property="IconColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource White}}" />
    </Style>

    <Style TargetType="TabbedPage">
        <Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray950}}" />
        <Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource Magenta}, Dark={StaticResource White}}" />
        <Setter Property="UnselectedTabColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}" />
        <Setter Property="SelectedTabColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
    </Style>

</ResourceDictionary>